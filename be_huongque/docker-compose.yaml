services:
  eureka:
    build:
      context: ./apigateway
      dockerfile: dockerfile
    ports:
      - "8765:8765"
    environment:
      EUREKA_HOSTNAME: eureka
  rabbitmq:
    image: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    restart: always
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
  # adminservice:
  #   build:
  #     context: ./adminservice
  #     dockerfile: dockerfile
  #   ports:
  #     - "8080:8081"
  #   depends_on:
  #     - rabbitmq
  #   env_file:
  #     - ./adminservice/.env
  # auth_db
  auth_db:
    image: postgres:latest
    container_name: auth_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: authservice
      POSTGRES_PASSWORD: auth
      POSTGRES_DB: authdb
    volumes:
      - authdb-data:/var/lib/postgresql/data
  authservice:
    build:
      context: ./authservice
      dockerfile: dockerfile 
    ports:
      - "8081:8081"
    environment:
      DB_HOST: auth_db
      DB_PORT: 5432
      DB_USERNAME: authservice
      DB_PASSWORD: auth
      DB_NAME: authdb
      PORT: 8081
    depends_on:
      - auth_db
      - rabbitmq
  
  # user_db
  user_db:
    image: postgres:latest
    container_name: user_db
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: userservice
      POSTGRES_PASSWORD: user
      POSTGRES_DB: userdb
    volumes:
      - userdb-data:/var/lib/postgresql/data
  userservice:
    build:
      context: ./userservice
      dockerfile: dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - user_db
    environment:
      DB_HOST: user_db
      DB_PORT: 5432
      DB_USERNAME: userservice
      DB_PASSWORD: user
      DB_NAME: userdb
      PORT: 8083
  
  #tenant service
  tenant_db:
    image: postgres:latest
    container_name: tenant_db
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: tenantservice
      POSTGRES_PASSWORD: tenant
      POSTGRES_DB: tenantdb
    volumes:
      - tenantdb-data:/var/lib/postgresql/data
  tenantservice:
    build:
      context: ./tenantservice
      dockerfile: dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - tenant_db
    environment:
      DB_HOST: tenant_db
      DB_PORT: 5432
      DB_USERNAME: tenantservice
      DB_PASSWORD: tenant
      DB_NAME: tenantdb
      PORT: 8084
  # registerservice:
  #   build:
  #     context: ./registerservice
  #     dockerfile: dockerfile
  #   ports:
  #     - "8080:8085"
  #   depends_on:
  #     - rabbitmq
  #   env_file:
  #     - ./registerservice/.env
  # s3bucket:
  #   build:
  #     context: ./s3bucket
  #     dockerfile: dockerfile
  #   ports:
  #     - "8086:8080"
  #   depends_on:
  #     - rabbitmq
  #   env_file:
  #     - ./s3bucket/.env

  # searchservice:
  #   build:
  #     context: ./searchservice
  #     dockerfile: dockerfile
  #   ports:
  #     - "8087:8080"
  #   depends_on:
  #     - rabbitmq
  #   env_file:
  #     - ./searchservice/.env

  
  # orderservice:
  #   build:
  #     context: ./orderservice
  #     dockerfile: dockerfile
  #   ports:
  #     - "8088:8080"
  #   depends_on:
  #     - rabbitmq
  #   env_file:
  #     - ./orderservice/.env

networks:
  default:
    driver: bridge

volumes:
  userdb-data:
  authdb-data:
  tenantdb-data:
  rabbitmq-data: